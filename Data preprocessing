Data preprocessing


import pandas as pd
import numpy as np

# Load the complete ECG5000 dataset
data = pd.read_csv("ecg.csv", header=None)

# Separate features and labels
X = data.iloc[:, :-1]  # All columns except the last one
labels = data.iloc[:, -1]  # The last column is the label

# Separate normal and abnormal samples
normal_samples = data[labels == 0]
abnormal_samples = data[labels == 1]

# Randomly select 293 normal and 28 abnormal samples
selected_normal_samples = normal_samples.sample(n=293, random_state=42)
selected_abnormal_samples = abnormal_samples.sample(n=28, random_state=42)

# Combine the selected samples
selected_data = pd.concat([selected_normal_samples, selected_abnormal_samples])

# Shuffle the selected data to mix normal and abnormal samples
selected_data = selected_data.sample(frac=1, random_state=42).reset_index(drop=True)

# Separate features and labels again after sampling
X_selected = selected_data.iloc[:, :-1].values
labels_selected = selected_data.iloc[:, -1].values

# Initialize an array to store normalized data
X_normalized = np.zeros_like(X_selected)

# Apply Min-Max scaling for each column
for col in range(X_selected.shape[1]):
    col_min = X_selected[:, col].min()
    col_max = X_selected[:, col].max()

    # Avoid division by zero if col_min equals col_max
    if col_max - col_min != 0:
        X_normalized[:, col] = (X_selected[:, col] - col_min) / (col_max - col_min)
    else:
        X_normalized[:, col] = 0  # or any constant, as all values in this column are the same

# Convert normalized data back to DataFrame and add the labels
normalized_data = pd.DataFrame(X_normalized)
normalized_data['label'] = labels_selected

# Save the preprocessed data if needed
normalized_data.to_csv("ECG5000_normalized_sampled.csv", index=False)
